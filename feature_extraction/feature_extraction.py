# -*- coding: UTF-8 -*-.
import argparse
import os
from pe import PE
import csv

def params():
    parser = argparse.ArgumentParser()
    parser.add_argument('files_location', help='Files location')
    parser.add_argument('csv_location', help='CSV location')
    params = parser.parse_args()
    return params.files_location, params.csv_location

def feature_extraction(pe):
    return pe.fe_values()

def initilize_csv(location, csv_file):
    csv_f = open(csv_file, "a")
    c = csv.writer(csv_f)
    for root, dirs, files in os.walk(location):
        for f in sorted(files):
            try:
                file_loc = os.path.join(root, f)
                pe = PE(file_loc,name=f,strings=True)
                header = pe.fe_methods()
                c.writerow(header)
                csv_f.flush()
                csv_f.close()
                return
            except:
                print "Invalid file."
                pass

def feature_extraction(location, csv_file):
    csv_f = open(csv_file, "a")
    c = csv.writer(csv_f)
    for root, dirs, files in os.walk(location):
        for f in sorted(files):
            try:
                file_loc = os.path.join(root, f)
                pe = PE(file_loc,name=f,strings=True)
                features = pe.fe_values()
                c.writerow(features)
                csv_f.flush()
            except:
                print "Invalid file."
                pass

# get files location
files_location, csv_file = params()
# initize csv and write header
initilize_csv(files_location, csv_file)
# extract features from goodwares
feature_extraction(files_location, csv_file)
